version: '3.7'
services:
  sqlserver:
    image: cdc-sql-2019
    build: 
        context: ./sql
        dockerfile: ./Dockerfile
    ports:
      - 1433:1433
    environment: 
      MSSQL_AGENT_ENABLED: "true"
      MSSQL_PID: Developer
      SA_PASSWORD: P@ssw0rd
      ACCEPT_EULA: "Y"
    networks:
      - broker-kafka
      
  zookeeper:
    image: confluentinc/cp-zookeeper:latest    
    networks: 
      - broker-kafka
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest    
    networks: 
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT      
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: 5000
      KAFKA_BROKER_ID: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1

  connector:
    image: debezium/connect:latest    
    networks: 
      - broker-kafka
    ports:
      - "8083:8083"
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      BOOTSTRAP_SERVERS: kafka:29092      
    depends_on:
      - zookeeper
      - kafka

  kafdrop:
    image: obsidiandynamics/kafdrop:latest    
    networks: 
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
  
  cdc-setup:
    image: ubuntu:20.04   
    command: RUN apt-get update && apt-get install -y iputils-ping    
    volumes:
      - ./scripts:/scripts
    networks:
      - broker-kafka
    entrypoint: [ "/scripts/cdcsetup.sh" ]

networks: 
  broker-kafka:
    driver: bridge  